version: '3.3'

services:
  frontend:
    build:
      context: ./frontend
    volumes:
      - frontend_build:/app/dist
    depends_on:
      - backend

  backend:
    build:
      context: ./backend
    volumes:
      - ./backend:/app
      - ./logs:/app/logs
      - ./settings:/app/data
    environment:
      - DATABASE_URL=${DATABASE_URL}
      - TG_TOKEN=${TG_TOKEN}
      - JWT_SECRET_KEY=${JWT_SECRET_KEY}
      - DEBUG=${DEBUG}

    depends_on:
      - db
    restart: always

  nginx:
    image: nginx:alpine
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/conf.d:/etc/nginx/conf.d
      - ./certs:/etc/nginx/certs:ro
      - frontend_build:/usr/share/nginx/html
    depends_on:
      - frontend
      - backend
    restart: always

  db:
    image: postgres:latest
    restart: always
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    volumes:
      - pgdata:/var/lib/postgresql/data
      - ./db_init:/docker-entrypoint-initdb.d

  telegram_bot:
    build: ./telegram_bot
    depends_on:
      - db
      - backend
    environment:
      - DATABASE_URL=${DATABASE_URL}
      - JWT_SECRET_KEY=${JWT_SECRET_KEY}
      - TG_TOKEN=${TG_TOKEN}
    volumes:
      - ./logs:/app/logs
      - ./settings:/app/data
    restart: always

volumes:
  pgdata:
  frontend_build: